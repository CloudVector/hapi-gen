"use strict";

const joi = require('joi');
const Boom = require('boom');
const validation = require('./js/validation.js');

module.exports.plugin = {
    register: (server) => {
        // Get facade object, contains all repositories
        const facade = server.settings.app.facade;
        // Routes setup
        server.route([
        {
            path: '/{name}',
            method: 'GET',
            handler: async (request, h) => {
                try {
                    let model = await facade.{nameAsVariable}.list(request.query);
                    return h.renderView('{name}-page', model);
                } catch (err) {
                    return Boom.boomify(err, {~lb} statusCode: 400 {~rb});
                }
            },
            options: {
                auth: false,
                validate: {
                    query: validation.search
                },
                tags: ['web', '{name}'],
                description: 'People {name} page'
            }
        },
        {
            path: '{endpoint}{name}',
            method: 'POST',
            handler: async (request, h) => {
                try {
                    return await facade.{nameAsVariable}.list(request.payload);
                } catch (err) {
                    return Boom.boomify(err, {~lb} statusCode: 400 {~rb});
                }
            },
            options: {
                auth: false,
                validate: {
                    payload: validation.search,
                    query: {
                        client_id: validation.client,
                        debug: validation.debug
                    }
                },
                tags: ['api', '{name}', 'people'],
                description: 'People {name}'
            }
        },
        {
            path: '{endpoint}{name}/html',
            method: 'GET',
            handler: (request, h) => {
                return h.renderView('{name}');
            },
            options: {
                auth: false,
                tags: ['{name}', 'html'],
                description: 'HTML content for {name}'
            }
        }
    ]);
},
    name: '{name}',
    version: '{version}'
};